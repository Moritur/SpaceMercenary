using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class AutoRepair : Module {

    protected bool cooledDown = true;   //false when module is in use or is cooling down
    ShipStats shipStats;
    const float regeneratedHp = 100f;   //amount of hp regenerated by this module
    const float hpPerSec = 10f;         //amount of hp regenerated every second
    const float cooldownTime = 10f;     //time in seconds player has to wait to use this module again

    public override void InitServer() {
        shipStats = GetComponentInParent<ShipStats>();
    }

    public override void InitPlayer() { }

    protected override bool CUse()
    {
        if (cooledDown)
        {
            StartCoroutine("Repair");
            return true;
        }
        else
        {
            return false;
        }
    }

    public override void Visuals() { }

    IEnumerator Repair()
    {
        cooledDown = false;
        float hpToRegenarate = regeneratedHp;
        float rhp;

        while (hpToRegenarate > 0f)
        {
            rhp = (hpPerSec * Time.deltaTime);

            shipStats.Repair(rhp);
            hpToRegenarate-= (rhp);
            yield return null;
        }
        yield return new WaitForSeconds(cooldownTime);
        cooledDown = true;
    }
}
